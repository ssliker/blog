1.关于枚举：
    1.如果变量的值在一个有限的范围内的几个确定值之间变动，那么可以把变量定义成一个枚举，将变量的值限定在枚举的范围内；如一年四季、一年12个月、一星期7天等等；
    2.使用枚举的优点在两个方面：
        1.可以限制变量的取值类型和范围，确保变量的值时符合要求的，不会出现非法值；
        2.让变量更有语义，枚举中可以通过属性定义变量的描述信息，辅助变量的使用；
2.Java中定义枚举：
    1.java中通过enum来定义枚举，定义方式如下：
        1.enum ColorEnum {
            RED,GREEN,BLUE;
        }
    2.枚举类的定义：
        1.枚举本质上也是引用类型，因此其定义方式和定义一个类相似，只是关键字需要使用enum；
        2.枚举类的名称需要符合Java中类名的定义要求，首字母大写的驼峰式命名法命名；
    3.枚举值的定义：
        1.枚举值作为枚举类的成员定义在枚举类中，大写加下划线分隔的方式命名；多个枚举值通过,隔开，最后一个枚举值使用;结尾；
        2.获取枚举值的方式有以下几种：
            1.ColorEnum.RED；返回枚举值，其类型是ColorEnum;
            2.ColorEnum.valueOf("RED")：返回名为RED的枚举值，其类型是ColorEnum;
            3.ColorEnum.values()[index]：返回顺序在index位置的枚举，其类型是ColorEnum;
        3.每一个枚举值都有两个基本属性：name和ordinal属性，其中name表示枚举值的名称，ordinal表示枚举值的定义顺序；其获取方式如下：
            1.获取名称：
                ColorEnum.RED.name()
            2.获取顺序：
                ColorEnum.RED.ordinal()
        4.为枚举值增加属性：
            1.声明枚举值需要增加的属性：
                private final String attr;
            2.定义枚举类的构造方法为枚举值属性赋值：
                private Color(String attr){
                    this.attr = attr;
                }
            3.定义枚举值时为属性赋值：
                RED("red"), BLUE("blue"), GREEN("blue")
3.Java中枚举类的本质：
    1.Java中枚举类的本质是class，enum只是语法糖，而枚举值则是枚举类中定义的枚举类类型的静态实例，这些信息从编译完成后的字节码文件即可看到；
    2.枚举类编译完成之后，会将enum关键字改为class，而枚举类则继承Enum类，所以本质上枚举类就是一个class；
    3.枚举值的定义则改为：public static final ColoeEnum RED，同时增加一个静态代码块，对枚举值进行初始化，因此枚举值就是枚举类的静态实例；
    4.自动创建一个枚举类的构造方法，在构造方法上接收两个参数：name:枚举值的名称、ordinal:枚举值的索引顺序；
    5.同时还会创建一个枚举类数组，存储所有的枚举值，该数组可以通过values()方法得到；

4.关于枚举类的两个静态方法对比：
    values()：直接返回一个枚举类数组，存储着枚举所有的枚举值；
    valueOf()：先通过反射调用枚举类的values()方法，获取存储所有枚举值的数组，然后遍历并比较枚举值的名称，构建一个HashMap，然后从HashMap中返回该枚举名称对应的枚举值；

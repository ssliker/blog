1.磁盘占用率过高：
    1.先df -h 查看各个挂载点占用磁盘情况，找到占用磁盘量最大的挂载点根目录；
    2.cd到根目录中，执行du -ah查看各个目录的磁盘占用情况，扎到占用磁盘最多的目录；
    3.ll或者ls -al查看占用磁盘最多的文件；


2.cpu占用率过高
    1.top或者top P :按照CPU是用率排序，查找cpu占用率最高的进程id；
    2.执行top -H -p pid查看当前进程中占用cpu较高的线程id；
    3.将线程id转换为16进制：printf '%x\n' lid
    4.jstack -F pid | grep 'lid' -C5 -color即可查看线程堆栈情况；
    通常发生cpu飙高的问题有以下几种：
        1.代码逻辑有误，陷入死循环中；通过jstack查看线程堆栈即可看到；
        2.频繁GC；通过jstat命令可以确认；
        3.发生频繁的上下文切换：通过vmstat可以查看正在运行和等待cpu的进程数以及每秒上下文切换次数；如果只是对某一个进程进行监控，可以使用pidstat -w pid即可查看；

3.内存占用率过高：
    1.free：查看系统内存占用情况
    2.top M ：按照内存占用率排序，查找内存占用率最高的进程id；
    3.常见OOM：
        1.线程创建过多
        3.创建了超大对象；
        4.创建了过多的对象；
        5.常量池常量过多；
    4.常见的stack overflow：
        1.方法递归调用；

4.频繁GC：
    1.调用jstat -gc pid 1000 5 确认gc情况；

5.查看线程数量：
    pstree -p pid | wc -l
6.ygc频繁：
    1.代码中是不是有频繁创建一次性对象；
    2.eden区域是否设置的过小；
1.缓存穿透：
    1.何为缓存穿透：
        1.缓存穿透是指一个请求所查询的数据在缓存和数据库中都不存在的现象；
    2.缓存穿透会带来什么问题：
        1.查询压力转嫁到数据库上，导致数据库压力较大；
    3.发生缓存穿透的原因：
        1.恶意请求不存在的数据；
        2.请求合法，但是缓存和数据库暂时没有数据；
    4.避免缓存穿透的解决方式：
        1.对于恶意请求：查询数据之前先进行安全校验，直接拒绝不合法的查询请求；
        2.对于请求合法，但是数据库和暂时没有这种数据：可以为在缓存中设置一个空值，并设置一个较短的过期时间；
        3.使用布隆过滤器过滤key不存在的请求；
    
2.缓存击穿：
    1.何为缓存击穿：
        1.缓存击穿是指缓存中key失效，导致无法命中缓存，需要去数据库中查询的现象；
    2.缓存击穿带来什么问题：
        1.如果一个热点key突然失效，那么对于热点key的请求都会打到数据库上，严重的情况下甚至拖垮数据库；
        2.单个请求响应速度变慢；
    3.发生缓存击穿的原因：
        1.数据未预热，缓存中暂无数据；
        2.key有效期到了导致key失效；
    4.避免缓存击穿的方式：
        1.对于数据冷启动：提前预热数据，或者对数据库的访问加锁并且对查询数据进行双检；
        2.key有效期导致：
            1.对于热点key而言，如果能够明确该key是热点key，可以手动延长过期时间；
            2.对于热点key而言，也可以采用对数据库加锁访问并且对查询数据双检的策略控制到达数据库的流量；
3.缓存雪崩：
    1.何为缓存雪崩：
        1.缓存大面积失效，导致大量的key无法命中缓存的现象；
    2.缓存雪崩会带来什么问题：
        1.缓存雪崩会导致所有无法命中缓存的key全部打到数据库上，给数据库造成比较大的压力；
    3.发生缓存雪崩的原因：
        1.大面积key在同一时间失效；
        2.缓存发生故障；
    4.避免缓存雪崩的方式：
        1.避免key的过期时间相同，尽量为key随机设置不同的过期时间；
        2.搭建高可用的缓存结构；
4.缓存双写一致性：
    1.先更新数据库、后更新缓存：并发情况下可能造成更新丢失的问题、对于写多读少的场景会造成缓存被频繁更新；
    2.先删除缓存、在更新数据库：可能发生当前线程更新完毕之前，其他线程将旧数据读取都缓存中；解决方案：延时双删
    3.先更新数据库、再删除缓存：并发情况下也可能出现脏数据，但是概率极小；通常都采用此种方案；



sharding-jdbc
1.简介
2.核心功能：读写分离、数据分片
3.解决问题：数据分片：水平分表、水平分库
          读写分离：垂直分库、主从架构
4.工作流程：sql解析-sql路由-sql改写-sql执行-结果合并
5.分片策略：
    1.starand：单个分片键、支持=、and、in、between支持
    2.complex：多个分片键、支持=、and、in、between支持
    3.hint
    4.inline：单个分片键、支持=、in的支持
    5.none：不使用分片策略
    
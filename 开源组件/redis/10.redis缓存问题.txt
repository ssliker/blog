1.Redis用作缓存时的问题：
    将redis用作缓存时，如果请求的key未命中缓存，那么请求将直接查库，在高并发大流量的场景下会对数据库造成比较大的压力，这种缓存无法命中的情况要尽力避免；
2.造成缓存无法命中的场景：
    1.缓存穿透：
        1.何为缓存穿透：
            1.缓存穿透是指从缓存中查询的key没有命中，需要从数据库中查找，但数据库中也没有该key对应的数据，那么下次请求过来还会继续从数据库中查找的现象；
        2.缓存穿透的问题：
            1.在非并发，小流量的场景下，缓存穿透不会给数据库带来较大的压力，只是接口的响应速度会变慢；
            2.但是在高并发大流量的场景下，会有较多的请求需要查库，那么涌入到数据库的流量会增大，严重时将会导致两个问题：
                1.数据库连接被占满，导致其他服务无法查库而频繁报错崩溃；
                2.数据库本身压力过大，严重的甚至也会导致数据库本身崩溃；
        3.发生缓存穿透的原因：
            1.请求不合法，恶意大量请求查询不存在的key；
            2.请求合法，但是系统中确实没有对应的数据；
        4.避免缓存穿透：
            1.对于恶意请求：对查询进行校验，在业务级别上过滤不合法的请求；
            2.对于合法请求：可以在缓存中设置一个空值，然后设置一个较短的过期时间，既能让下次请求过来时命中缓存，也能在数据库中有数据时及时得到更新；
            3.也可以借助布隆过滤器，缓存不存在的key，下次请求进来之后直接用布隆过滤器进行过滤；
    2.缓存击穿：
        1.何为缓存击穿：
            1.缓存击穿是指缓存中的key无法命中，需要从数据库中查询数据并设置到缓存中的现象；
            2.相比缓存穿透而言，缓存击穿场景是能够从数据库查询到数据的；
        2.缓存击穿的问题：
            1.如果一个失效的key刚好是热点key，针对该key的请求量较大，如果该key一旦失效，那么大量的请求会落在数据库上，同样会出现缓存穿透中的问题：数据库连接被占满，数据库压力过大甚至导致崩溃；
        3.发生缓存穿透的原因:
            1.key过期失效；
            2.数据未预热到缓存中；
        4.解决办法：
            1.对于未预热的数据可以提前预热到缓存中；
            2.对于热点key:
                1.如果能够提前预知该key是一个热点key，那么可以设置较长的过期时间；甚至将同一个key对应的数据分散在多个key上，并设置不同的过期时间；
                2.提前避免的措施也可以是通过给查库查寻操作加锁，并执行双检策略，削减到达数据库的流量；
                3.如果热点key的过期时间已到，缓存穿透已经发生了，那么可以手动在缓存中添加一个key，并设置较长的一个过期时间；
    3.缓存雪崩：
        1.缓存雪崩：
            1.缓存雪崩是指大量的key无法在缓存中命中，导致针对这些key的查询全部进入到数据库中；
        2.缓存雪崩的问题：
            1.缓存雪崩同样会产生缓存穿透中的问题；
        3.发生缓存穿透的原因：
            1.大面积的key同时过期失效；
            2.缓存故障；
        4.避免缓存雪崩的方式：
            1.避免key的过期时间相同，为key设置随机的过期时间；
            2.搭建高可用的缓存服务部署架构；
跟浏览器缓存相关的头部字段：
    1.Cache-control：设置浏览器缓存模式：服务器告知浏览器；
    2.Expires：设置资源过期时间
    3.Last-Modified：返回资源最近一次修改时间，响应头字段，服务器告诉浏览器；
    4.If-Modified-Since：检测资源是否已经被修改，请求头字段；由浏览器告知服务器；
    5.Etag：资源标识；响应头字段，服务器告知浏览器；
    6.If-None-Match：缓存资源标识，请求头字段，浏览器告知服务器；
    通常情况下，Last-Modified和If-Modified-Since联合使用、Etag 和 If-None-Match联合使用；

浏览器缓存内容：
    静态资源：图片、css、js等；

缓存控制原理和特点：
    1.Expires：
        服务器在向客户端返回资源时，会带上该资源的Expires过期时间，浏览器会检测该资源的过期时间并缓存资源；下次请求该资源时，浏览器会先检测该资源的过期时间和当前时间进行比对，如果资源未过期，那么将不会向服务器请求该资源，节省带宽；

        如果资源一旦过期，浏览器将会向服务器发送获取资源的请求，服务器将会继续返回带有资源内容的响应；
    
        其基本实现了静态资源的缓存控制，但是不够精确，因此可以通过Last-Modified和If-Modified-Since进行优化；
    
    2.Cache-Control：
        请求时常见取值如下：
            no-cache：  
                表示缓存服务器返回缓存的内容时必须向源服务器进行有效性确认；使用方式为：Cache-Control:no-cache
            no-store：
                指示服务器不允许缓存任何请求的内容；使用方式：Cache-Control:no-store
            max-age=[秒]：
                表示客户端只接受有效期在max-age设置范围内的(即未过期)的资源；如果max-age为0，那么缓存服务器就必须将请求转发给源服务器获取最新的资源；使用方式：Cache-Control:max-age=有效期秒数
            max-stale(=[秒])
                表示客户端允许接收有效期已经超过max-age参数设置时间，但是未超过max-stale指定时间的消息；如果设置了max-stale这个参数，但是未指定具体的时间参数，那么无论过期多久都会接收；
            min-fresh=[秒]：
                表示要求缓存服务器返回还未过指定时间的资源；
            no-transform：
                表示在请求过程中，缓存服务器不允许改变主体的媒体类型；
            only-if-cached：
                表示如果缓存服务器如果有缓存的资源就返回资源，如果没有不必向源服务器请求新的资源，直接返回504状态码；
            cache-extension：
                新指令标记，可以扩展Cache-Control的值，如果缓存服务器能够理解扩展的标记需要进行处理，如果理解不了忽略即可；
        响应时的取值：
            public:
                指示缓存服务器可以向任意用户返回所请求的资源；
            private:
                指示缓存服务器只向特定用户返回该资源；
            no-cache:
                指示缓存服务器不允许缓存该资源，并且之后也不会再对缓存服务器请求中提出的资源有效性进行确认；
            no-store:
                指示客户端不允许对本次的请求做出任何缓存；
            no-transform:
                指示缓存服务器在响应中不允许更改相应主体的媒体类型；
            must-revalidate:
                指示缓存服务器向客户端返回资源时必须向源服务器进行验证，如果连接源服务器失败，必须向客户端返回504状态码；
            proxy-revalidate:
                指示代理缓存服务器在向客户端返回资源时必须向源服务器进行验证缓存的有效性；
            max-age=[秒]:
                指示缓存服务器对该资源进行缓存，有效期为指定的秒数；HTTP/1.1版本的缓存服务器遇到同时存在Expire首部字段的情况时会优先处理max-age的指定，而忽略Expires；但是HTTP/1.0却相反，会忽略max-age字段；
            s-maxage=[秒]:
            cache-extension:
                新指令标记，可以扩展Cache-Control的值，如果缓存服务器能够理解扩展的标记需要进行处理，如果理解不了忽略即可；

        Cache-Control提供了更加精确的缓存控制策略，实际应用中，浏览器也会先检查是否有Cache-Control字段，如果有则使用Cache-Control配置的策略，否则使用Expires配置的过期时间；

    3.Last-Modified和If-Modified-Since
        无论是Expires还是Cache-Control都是通过设置资源的有效期来控制缓存失效的，那么会出现缓存已过期，但实际的资源内容并未修改，资源依旧可以使用，如果服务器再向客户端返回资源内容会造成贷款浪费；因此服务器在向客户端返回资源时，还会带上Last-Modified也就是最近一次修改时间，浏览器会检测该资源的过期时间并缓存资源；下次请求该资源时，浏览器会先检测该资源的过期时间和当前时间进行比对，如果资源未过期，那么将不会向服务器请求该资源，节省带宽；

        如果资源一旦过期，浏览器将会向服务器发送获取资源的请求，但是发送请求的时候还会带上If-Modified-Since字段，该字段的值是上一次响应返回给客户端的Last-Modified值，服务器会检测该资源是否已经修改，如果已经修改则返回新的资源内容，否则返回304状态码，表示资源可以继续使用，不会携带资源内容，节省带宽，加快请求速度；
    
        其相比单独使用Expires字段或者Cache-Control而言，缓存控制的更加精细；但是由于Modified的时间控制只能在秒级，那么资源更新较频繁的情况下无法及时获取到最新的资源；如果文件的内容没有改变，只是修改时间改变，那么同样会导致服务端将资源内容返回给客户端；
        
    4.为了解决资源内容未变，而修改时间改变到时资源被重新发送的问题，http协议增加了Etag字段和If-None-Match字段；Etag相当于资源的唯一id，资源内容不变Etag就不会变，资源内容改变Etag才会改变；
        服务器响应给客户端资源内容时除过有上述字段信息以外还会有一个Etag值，而当资源过期之后，浏览器再次向服务端请求资源时会携带上If-None-Match字段，该字段的值就是Etag的值，服务器收到该值之后会检测文件是否变化，如果未变，则向浏览器响应一个304状态码，而且不会携带资源内容，浏览器可以继续使用缓存；

        Etag和If-None-Match的使用，更加精确的控制了缓存的使用；


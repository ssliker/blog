关于https：
    使用ssl或者tsl加密过的http通信协议；

关于https和http的对比：
    1.http传递明文。https传递的是加密过的密文；
    2.http默认使用80端口。https默认使用443端口；
    3.http通信效率比https高；

关于https发展过程：
    由于http通信直接传递明文，那么在发生中间人攻击之后，能够直接看到通信内容，很不安全；因此需要对通信内容进行加密；
    加密的措施一般由两种：对称加密、非对称加密：
    对称加密：
        1.加密和解密使用同一个秘钥的加密解密方式称为对称加密；
        2.特点：
            1.优点：运算简单，加密效率高；
            2.缺点：1.每条通信线路都需要保存一个对称秘钥，秘钥数量会膨胀；2.秘钥本身传递的安全性无法保证，仍然会被劫持；
        3.常见对称加密方式：RC2、RC4、RC5、DES、3DES
    非对称加密：
        1.加密和解密使用不同的秘钥，即私钥和公钥，公钥可以公开，私钥需要妥善保管，通信时，一端需要知道另一端的公钥，在通信时使用另一端的公钥对数据加密，另一端收到数据时需要使用对应的私钥来解密；中间人即使知道公钥也无法解密数据；
        2.特点：
            1.优点：能够解决对称秘钥无法安全传递的问题；只需保管私钥即可，不会产生秘钥膨胀的问题；
            2.缺点：1.运算量大，计算复杂，加密和解密效率很低；2.公钥本身仍然无法安全传递，可能被劫持而伪造通信对端；
        3.常见非对称加密方式：RSA、ECC
    
    HTTPS加密方案：
        由于非对称加密效率太低，因此HTTPS采用以下方案：
            1.通过非对称加密完成对称秘钥交换；
            2.通过对称加密的方式进行通信；    

关于CA证书：
    无论是对称加密还是非对称加密都会有一个问题就是秘钥无法被安全传递，容易被中间人伪造成对端；因此需要CA证书解决非对称加密中公钥的信任问题；
    具体原理如下：
        1.服务端需要向公证机构申请CA证书，CA证书中包括了颁发机构、证书使用者、有效时间、公钥、证书数字签名以及签名用到的hash算法等信息；
        2.在通信时，服务端需要将证书发送给客户端，客户端会验证证书的有效性，验证时先通过公钥解密证书中的签名，得到一个hash值，然后再通过证书中的hash算法生成一个hash值，检测两个hash值是否相等，如果不想等那么说明证书被篡改过，不可信任；
        所以CA证书有两个作用：
            1.认证服务端的合法性；
            2.颁发公钥给服务端；
        
关于HTTPS加密流程：
    1.浏览器向服务端发送请求，传递升级协议的请求；
    2.服务端返回CA证书信息给客户端；
    3.客户端校验CA证书的合法性；如果不合法将警告客户端；
    4.如果合法，客户端会生产将要通信的对称秘钥，然后通过服务端传递的公钥加密，发送给服务端；
    5.服务端收到加密之后的对称秘钥，会使用私钥解密，然后获取到对称秘钥；
    6.客户端和服务端通过对称秘钥加密之后的通信消息，实现密文传递；

关于CA证书信任问题；
    

        
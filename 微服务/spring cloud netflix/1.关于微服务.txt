1.关于微服务：
    1.微服务是指将原本属于一个项目的多个模块按照业务功能边界拆分为多个独立的服务。每个服务有自己独立的进程及部署环境，多个服务之间通过网络进行交互。

2.关于微服务的优缺点：
    1.按照业务功能边界拆分服务，每个业务都是一个独立的服务，这个独立性主要体现在以下几个方面：
        1.包括开发技术独立甚至于开发团队独立，不同业务功能可以采用不同的技术实现，开发灵活度更高；
        2.部署环境独立，减少服务之间资源占用的耦合性，提高服务的可用性，一个服务故障之后不会导致其他服务故障；
        3.升级维护更加独立，当前功能代码升级相比于单体项目而言，不用担心是否会误改其他项目的配置或者代码；
        4.对于测试更加独立，测试只需关注当前服务即可；不用在升级之后对整个项目做测试；
    2.缺点：
        1.部署资源消耗相比单体项目更多，部署和维护流程更长，更复杂；
        2.服务之间通过网络进行通信，相比于单体项目中直接发起函数调用要更耗时；
        3.服务之间联调以及问题排查更加复杂，服务之间调用链路过长，导致联调以及问题的排查都需要查看更多服务日志来处理；

3.关于微服务实现方案：
    1.通过spring cloud netflix;  
        1.第一代微服务解决方案；
        2.常用组件组件由以下几个：
            1.Eureka：服务治理组件，用于服务注册、服务发现；
            2.Hystrix：容错管组件，实现断路器模式，防止服务雪崩；
            3.Ribbon：客户端负载均衡组件，实现服务调用的负载均衡；
            4.Fegin：函数式服务调用组件，基于Ribbon和Hystrix的声明式服务调用组件；
            5.Zuul/Gateway：微服务网关：提供动态路由，访问过滤等服务；
            6.Config：配置管理组件：提供动态配置管理服务；
            7.Bus：事件和消息总线，用来在集群中传播状态变化。。
        3.版本信息：
            1.Spring Cloud Netflix父项目使用的是伦敦地铁站站名单词作为版本号，而不是数字，可以避免Spring Cloud项目和其子项目版本号混淆；
            2.Spring Cloud Netflix不同版本依赖的springBoot版本不同，具体依赖的springBoot版本号可以在官网查到，或者访问接口：https://start.spring.io/actuator/info；
            3.版本后缀：
                1.BUILD-XXX：开发版，开发团队内部使用；
                2.M：里程碑版，一般会标注PRE，表示预览；
                3.RC：候选发布版本，处于观察期，主要用来改bug，不再加入新的功能；
                4.SR：正式发布版，一般是正式发布的一个版本，bug很少，同时也会标注GA，表示该版本是一个稳定版本；
                5.GA：稳定版本，经过全面测试，并且可以对外发布的版本称之为GA；
                通常选择的时候会选择一个次新且标记了GA的版本；
            4.Spring Cloud Netflix是一个父项目，由多个子项目组成，其子项目采用数字作为版本号：
                1.一般由三位数字组成：第一位为主版本号，第二位为次版本号，第三位为修改版本号；
                2.有时候也会带有后缀字母，不同字母表示以下含义：
                    1.Base：表示处于设计开发阶段；
                    2.Alpha：初级版本，功能基本开发完成，但是可能会有较多的bug；
                    3.Bate；预发布版本；
                    4.Release：最终版；
            


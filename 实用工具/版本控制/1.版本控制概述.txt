1.版本：
    文件或者软件在状态变化时，产生的不同状态称为版本；

2.版本管理的意义：
    1.可以记录历史版本，查看历史版本信息，回退至历史版本；
    2.可以创建分支，合并分支，以分支为单位对内容进行版本管理等；
    3.多人协作，自动合并不同的提交状态，自动提示冲突；

3.常用版本管理软件：
    1.svn
    2.git
    3.cvs
    4.vss
    
4.关于svn和git的对比：
    1.集中式和分布式：
        svn：
            1.svn是一个集中式的版本管理系统，版本库是放在远程服务器的，所有本地的文件必须提交至远程服务器才能进行版本管理，在开发的时候需要从服务器拉取最近的版本，开发完成之后需要提交至服务器进行版本托管；
            2.集中式的优点在于：
                1.只在一处进行版本管理，多人协作时能够保证版本的强一致性；
            3.集中式的缺点在于：
                1.本地客户端必须和远程服务器能够连通，否则无法进步版本的推送、拉取和查看等操作，由于网络连接的原因，其处理速度也较慢；
                2.具有单点故障，一旦远程服务器坏掉，将无法进行版本管理，甚至造成版本库丢失；
        git：
            1.git是一个分布式的版本管理系统，版本库放在本地，能够直接在本地完成版本管理；
            2.分布式的优点在于：
                1.版本库放在本地，无需网络参与即可正常进行版本管理；而且是本地操作，所以速度很快；
                2.git除过本地版本管理以外，还支持远程仓库的功能，能够将本地文件以及版本库备份在远程仓库，避免单点故障的同时还能满足多人协作；
            3.分布式缺点在于：
                1.git由于是在本地进行版本管理，多人协作时不同地方的版本信息不同，只有提交到远程仓库才能保证最终的一致性；
    2.分支管理功能：
        svn：
            1.svn也支持分支管理功能，但是svn的分支是通过拷贝目录来实现的；效率较低，代价较大；
            2.svn分支不够自动智能，无法记录合并历史信息，需要手工记录合并历史信息；
        git：
            1.git是通过改变指针指向来切换和创建分支的，效率极高；
            2.git会自动记录合并的历史信息；
            3.git支持非常灵活的分支创建、切换操作；

    3.版本管理粒度大小：
        svn：
            1.svn会在每个目录下创建一个.svn的隐藏目录，该目录会记录其所在目录的完整版本信息，能够以目录为单位进行版本管理；同时也支持以目录为单位检出文件信息；
        git：
            1.git只会在项目根路径下创建一个.git的隐藏目录，.git就是该项目的版本库，记录该项目中所有文件的版本信息，是以项目为单位进行版本管理的；因此不支持部分检出功能，必须将整个项目检出；
    
    4.阶段版本管理：
        svn：
            1.通过svn做版本管理时，不能将未完成的内容提交至版本库，否则会覆盖掉版本库中之前的内容；即无法对未完成的内容进行版本管理；
        git：
            2.通过git做版本管理时，可以将未完成的内容进行版本管理；
    
    5.其他区别：
        1.设计思想：
            1.svn中进行版本管理的思想只有工作区和版本库的概念，其步骤在于标记需要管理的文件、提交被标记文件至远程仓库；
            2.git中进行版本管理有工作区、暂存区、版本库的概念，其步骤在于将文件提交至暂存区，然后将暂存区内容提交至版本库；同时git也支持远程仓库功能；
        2.版本号：
            1.svn中的版本号连续；
            2.git中的版本号是一个32位的hash值；具有随机性；
        3.撤销操作：
            1.svn中一旦提交到服务器，将不允许进行撤销，只能选择修改提交；
            2.git中允许对已经提交到版本库的版本进行撤销；